USES DIVIDE AND CONQUER APPROACH 

#include<iostream>
using namespace std;


// function 1 
void swap(int arr[],int i , int j)
{
    int temp=arr[i];
    arr[i]=arr[j];
    arr[j]=temp;
}

//function 2 
int partition(int arr[],int l , int r)
{
    int pivot=arr[r];
    int i =l-1;
    for(int j =l;j<r;j++)
    {
    if(arr[j]<pivot)
    {
        i++;
        swap(arr,i,j); // swaps element 
    }}
    swap(arr,i+1,r); // puts the pivot at correct position by swapping the element greater than pivot 
    return i+1; // returns the pivot element current
}

//function 3
void quickSort(int arr[],int l , int r)
{
    if(l<r)
    {
        int pi=partition(arr,l,r);

        quickSort(arr,0,pi-1);
        quickSort(arr,pi+1,r);
    }

}



int main()
{
 int arr[]={3,8,2,5,1,4,7,6};
 int n =8;
 quickSort(arr,0,7);
 for(int i=0;i<n;i++)
 {
    cout<<arr[i]<<" ";
 }
 cout<<endl;
 return 0;
}
